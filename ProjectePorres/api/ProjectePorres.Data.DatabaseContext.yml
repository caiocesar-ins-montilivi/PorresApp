### YamlMime:ManagedReference
items:
- uid: ProjectePorres.Data.DatabaseContext
  commentId: T:ProjectePorres.Data.DatabaseContext
  id: DatabaseContext
  parent: ProjectePorres.Data
  children:
  - ProjectePorres.Data.DatabaseContext.#ctor(System.String)
  - ProjectePorres.Data.DatabaseContext.ComprovarConnexio
  - ProjectePorres.Data.DatabaseContext.RegistrarUsuari(System.String,System.String,System.String,System.String,System.String,System.String)
  - ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId(System.Int32)
  - ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom(System.String)
  - ProjectePorres.Data.DatabaseContext.ValidarUsuari(System.String,System.String)
  langs:
  - csharp
  - vb
  name: DatabaseContext
  nameWithType: DatabaseContext
  fullName: ProjectePorres.Data.DatabaseContext
  type: Class
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: DatabaseContext
    path: Data/DatabaseContext.cs
    startLine: 10
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public class DatabaseContext
    content.vb: Public Class DatabaseContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ProjectePorres.Data.DatabaseContext.#ctor(System.String)
  commentId: M:ProjectePorres.Data.DatabaseContext.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: DatabaseContext(String)
  nameWithType: DatabaseContext.DatabaseContext(String)
  fullName: ProjectePorres.Data.DatabaseContext.DatabaseContext(System.String)
  type: Constructor
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: .ctor
    path: Data/DatabaseContext.cs
    startLine: 14
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public DatabaseContext(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(connectionString As String)
  overload: ProjectePorres.Data.DatabaseContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ProjectePorres.Data.DatabaseContext.ComprovarConnexio
  commentId: M:ProjectePorres.Data.DatabaseContext.ComprovarConnexio
  id: ComprovarConnexio
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: ComprovarConnexio()
  nameWithType: DatabaseContext.ComprovarConnexio()
  fullName: ProjectePorres.Data.DatabaseContext.ComprovarConnexio()
  type: Method
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: ComprovarConnexio
    path: Data/DatabaseContext.cs
    startLine: 20
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public async Task<bool> ComprovarConnexio()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function ComprovarConnexio As Task(Of Boolean)
  overload: ProjectePorres.Data.DatabaseContext.ComprovarConnexio*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: ProjectePorres.Data.DatabaseContext.ValidarUsuari(System.String,System.String)
  commentId: M:ProjectePorres.Data.DatabaseContext.ValidarUsuari(System.String,System.String)
  id: ValidarUsuari(System.String,System.String)
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: ValidarUsuari(String, String)
  nameWithType: DatabaseContext.ValidarUsuari(String, String)
  fullName: ProjectePorres.Data.DatabaseContext.ValidarUsuari(System.String, System.String)
  type: Method
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: ValidarUsuari
    path: Data/DatabaseContext.cs
    startLine: 35
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public async Task<bool> ValidarUsuari(string nomUsuari, string contrasenya)
    parameters:
    - id: nomUsuari
      type: System.String
    - id: contrasenya
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function ValidarUsuari(nomUsuari As String, contrasenya As String) As Task(Of Boolean)
  overload: ProjectePorres.Data.DatabaseContext.ValidarUsuari*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: ProjectePorres.Data.DatabaseContext.RegistrarUsuari(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:ProjectePorres.Data.DatabaseContext.RegistrarUsuari(System.String,System.String,System.String,System.String,System.String,System.String)
  id: RegistrarUsuari(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: RegistrarUsuari(String, String, String, String, String, String)
  nameWithType: DatabaseContext.RegistrarUsuari(String, String, String, String, String, String)
  fullName: ProjectePorres.Data.DatabaseContext.RegistrarUsuari(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: RegistrarUsuari
    path: Data/DatabaseContext.cs
    startLine: 82
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public async Task<bool> RegistrarUsuari(string nomUsuari, string dni, string nom, string cognom, string correu, string password)
    parameters:
    - id: nomUsuari
      type: System.String
    - id: dni
      type: System.String
    - id: nom
      type: System.String
    - id: cognom
      type: System.String
    - id: correu
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RegistrarUsuari(nomUsuari As String, dni As String, nom As String, cognom As String, correu As String, password As String) As Task(Of Boolean)
  overload: ProjectePorres.Data.DatabaseContext.RegistrarUsuari*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom(System.String)
  commentId: M:ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom(System.String)
  id: RetornarUsuariPerNom(System.String)
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: RetornarUsuariPerNom(String)
  nameWithType: DatabaseContext.RetornarUsuariPerNom(String)
  fullName: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom(System.String)
  type: Method
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: RetornarUsuariPerNom
    path: Data/DatabaseContext.cs
    startLine: 117
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public async Task<UsuariModel> RetornarUsuariPerNom(string nomUsuari)
    parameters:
    - id: nomUsuari
      type: System.String
    return:
      type: System.Threading.Tasks.Task{ProjectePorres.Model.UsuariModel}
    content.vb: Public Function RetornarUsuariPerNom(nomUsuari As String) As Task(Of UsuariModel)
  overload: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId(System.Int32)
  commentId: M:ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId(System.Int32)
  id: RetornarUsuariPerId(System.Int32)
  parent: ProjectePorres.Data.DatabaseContext
  langs:
  - csharp
  - vb
  name: RetornarUsuariPerId(Int32)
  nameWithType: DatabaseContext.RetornarUsuariPerId(Int32)
  fullName: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId(System.Int32)
  type: Method
  source:
    remote:
      path: ProjectePorres/Data/DatabaseContext.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: RetornarUsuariPerId
    path: Data/DatabaseContext.cs
    startLine: 162
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.Data
  syntax:
    content: public async Task<UsuariModel> RetornarUsuariPerId(int idUsuari)
    parameters:
    - id: idUsuari
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{ProjectePorres.Model.UsuariModel}
    content.vb: Public Function RetornarUsuariPerId(idUsuari As Integer) As Task(Of UsuariModel)
  overload: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: ProjectePorres.Data
  commentId: N:ProjectePorres.Data
  name: ProjectePorres.Data
  nameWithType: ProjectePorres.Data
  fullName: ProjectePorres.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ProjectePorres.Data.DatabaseContext.#ctor*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.#ctor
  name: DatabaseContext
  nameWithType: DatabaseContext.DatabaseContext
  fullName: ProjectePorres.Data.DatabaseContext.DatabaseContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ProjectePorres.Data.DatabaseContext.ComprovarConnexio*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.ComprovarConnexio
  name: ComprovarConnexio
  nameWithType: DatabaseContext.ComprovarConnexio
  fullName: ProjectePorres.Data.DatabaseContext.ComprovarConnexio
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: ProjectePorres.Data.DatabaseContext.ValidarUsuari*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.ValidarUsuari
  name: ValidarUsuari
  nameWithType: DatabaseContext.ValidarUsuari
  fullName: ProjectePorres.Data.DatabaseContext.ValidarUsuari
- uid: ProjectePorres.Data.DatabaseContext.RegistrarUsuari*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.RegistrarUsuari
  name: RegistrarUsuari
  nameWithType: DatabaseContext.RegistrarUsuari
  fullName: ProjectePorres.Data.DatabaseContext.RegistrarUsuari
- uid: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom
  name: RetornarUsuariPerNom
  nameWithType: DatabaseContext.RetornarUsuariPerNom
  fullName: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerNom
- uid: System.Threading.Tasks.Task{ProjectePorres.Model.UsuariModel}
  commentId: T:System.Threading.Tasks.Task{ProjectePorres.Model.UsuariModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UsuariModel>
  nameWithType: Task<UsuariModel>
  fullName: System.Threading.Tasks.Task<ProjectePorres.Model.UsuariModel>
  nameWithType.vb: Task(Of UsuariModel)
  fullName.vb: System.Threading.Tasks.Task(Of ProjectePorres.Model.UsuariModel)
  name.vb: Task(Of UsuariModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ProjectePorres.Model.UsuariModel
    name: UsuariModel
    nameWithType: UsuariModel
    fullName: ProjectePorres.Model.UsuariModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ProjectePorres.Model.UsuariModel
    name: UsuariModel
    nameWithType: UsuariModel
    fullName: ProjectePorres.Model.UsuariModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId*
  commentId: Overload:ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId
  name: RetornarUsuariPerId
  nameWithType: DatabaseContext.RetornarUsuariPerId
  fullName: ProjectePorres.Data.DatabaseContext.RetornarUsuariPerId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
