### YamlMime:ManagedReference
items:
- uid: ProjectePorres.ViewModels.CommandViewModel
  commentId: T:ProjectePorres.ViewModels.CommandViewModel
  id: CommandViewModel
  parent: ProjectePorres.ViewModels
  children:
  - ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object})
  - ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  - ProjectePorres.ViewModels.CommandViewModel.CanExecute(System.Object)
  - ProjectePorres.ViewModels.CommandViewModel.CanExecuteChanged
  - ProjectePorres.ViewModels.CommandViewModel.Execute(System.Object)
  langs:
  - csharp
  - vb
  name: CommandViewModel
  nameWithType: CommandViewModel
  fullName: ProjectePorres.ViewModels.CommandViewModel
  type: Class
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: CommandViewModel
    path: ViewModels/CommandViewModel.cs
    startLine: 9
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: 'public class CommandViewModel : ICommand'
    content.vb: >-
      Public Class CommandViewModel
          Implements ICommand
  inheritance:
  - System.Object
  implements:
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object})
  commentId: M:ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object})
  id: '#ctor(System.Action{System.Object})'
  parent: ProjectePorres.ViewModels.CommandViewModel
  langs:
  - csharp
  - vb
  name: CommandViewModel(Action<Object>)
  nameWithType: CommandViewModel.CommandViewModel(Action<Object>)
  fullName: ProjectePorres.ViewModels.CommandViewModel.CommandViewModel(System.Action<System.Object>)
  type: Constructor
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: .ctor
    path: ViewModels/CommandViewModel.cs
    startLine: 14
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: public CommandViewModel(Action<object> executeAction)
    parameters:
    - id: executeAction
      type: System.Action{System.Object}
    content.vb: Public Sub New(executeAction As Action(Of Object))
  overload: ProjectePorres.ViewModels.CommandViewModel.#ctor*
  nameWithType.vb: CommandViewModel.CommandViewModel(Action(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ProjectePorres.ViewModels.CommandViewModel.CommandViewModel(System.Action(Of System.Object))
  name.vb: CommandViewModel(Action(Of Object))
- uid: ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  commentId: M:ProjectePorres.ViewModels.CommandViewModel.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  id: '#ctor(System.Action{System.Object},System.Predicate{System.Object})'
  parent: ProjectePorres.ViewModels.CommandViewModel
  langs:
  - csharp
  - vb
  name: CommandViewModel(Action<Object>, Predicate<Object>)
  nameWithType: CommandViewModel.CommandViewModel(Action<Object>, Predicate<Object>)
  fullName: ProjectePorres.ViewModels.CommandViewModel.CommandViewModel(System.Action<System.Object>, System.Predicate<System.Object>)
  type: Constructor
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: .ctor
    path: ViewModels/CommandViewModel.cs
    startLine: 20
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: public CommandViewModel(Action<object> executeAction, Predicate<object> canExecuteAction)
    parameters:
    - id: executeAction
      type: System.Action{System.Object}
    - id: canExecuteAction
      type: System.Predicate{System.Object}
    content.vb: Public Sub New(executeAction As Action(Of Object), canExecuteAction As Predicate(Of Object))
  overload: ProjectePorres.ViewModels.CommandViewModel.#ctor*
  nameWithType.vb: CommandViewModel.CommandViewModel(Action(Of Object), Predicate(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ProjectePorres.ViewModels.CommandViewModel.CommandViewModel(System.Action(Of System.Object), System.Predicate(Of System.Object))
  name.vb: CommandViewModel(Action(Of Object), Predicate(Of Object))
- uid: ProjectePorres.ViewModels.CommandViewModel.CanExecuteChanged
  commentId: E:ProjectePorres.ViewModels.CommandViewModel.CanExecuteChanged
  id: CanExecuteChanged
  parent: ProjectePorres.ViewModels.CommandViewModel
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: CommandViewModel.CanExecuteChanged
  fullName: ProjectePorres.ViewModels.CommandViewModel.CanExecuteChanged
  type: Event
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: CanExecuteChanged
    path: ViewModels/CommandViewModel.cs
    startLine: 25
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: public event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ProjectePorres.ViewModels.CommandViewModel.CanExecute(System.Object)
  commentId: M:ProjectePorres.ViewModels.CommandViewModel.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: ProjectePorres.ViewModels.CommandViewModel
  langs:
  - csharp
  - vb
  name: CanExecute(Object)
  nameWithType: CommandViewModel.CanExecute(Object)
  fullName: ProjectePorres.ViewModels.CommandViewModel.CanExecute(System.Object)
  type: Method
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: CanExecute
    path: ViewModels/CommandViewModel.cs
    startLine: 31
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: public bool CanExecute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: ProjectePorres.ViewModels.CommandViewModel.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ProjectePorres.ViewModels.CommandViewModel.Execute(System.Object)
  commentId: M:ProjectePorres.ViewModels.CommandViewModel.Execute(System.Object)
  id: Execute(System.Object)
  parent: ProjectePorres.ViewModels.CommandViewModel
  langs:
  - csharp
  - vb
  name: Execute(Object)
  nameWithType: CommandViewModel.Execute(Object)
  fullName: ProjectePorres.ViewModels.CommandViewModel.Execute(System.Object)
  type: Method
  source:
    remote:
      path: ProjectePorres/ViewModels/CommandViewModel.cs
      branch: docfx
      repo: https://github.com/caiocesar-ins-montilivi/PorresApp.git
    id: Execute
    path: ViewModels/CommandViewModel.cs
    startLine: 36
  assemblies:
  - ProjectePorres
  namespace: ProjectePorres.ViewModels
  syntax:
    content: public void Execute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    content.vb: Public Sub Execute(parameter As Object)
  overload: ProjectePorres.ViewModels.CommandViewModel.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ProjectePorres.ViewModels
  commentId: N:ProjectePorres.ViewModels
  name: ProjectePorres.ViewModels
  nameWithType: ProjectePorres.ViewModels
  fullName: ProjectePorres.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: ProjectePorres.ViewModels.CommandViewModel.#ctor*
  commentId: Overload:ProjectePorres.ViewModels.CommandViewModel.#ctor
  name: CommandViewModel
  nameWithType: CommandViewModel.CommandViewModel
  fullName: ProjectePorres.ViewModels.CommandViewModel.CommandViewModel
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{System.Object}
  commentId: T:System.Predicate{System.Object}
  parent: System
  definition: System.Predicate`1
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: System.Predicate(Of System.Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: ProjectePorres.ViewModels.CommandViewModel.CanExecute*
  commentId: Overload:ProjectePorres.ViewModels.CommandViewModel.CanExecute
  name: CanExecute
  nameWithType: CommandViewModel.CanExecute
  fullName: ProjectePorres.ViewModels.CommandViewModel.CanExecute
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    nameWithType: ICommand.CanExecute
    fullName: System.Windows.Input.ICommand.CanExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    nameWithType: ICommand.CanExecute
    fullName: System.Windows.Input.ICommand.CanExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ProjectePorres.ViewModels.CommandViewModel.Execute*
  commentId: Overload:ProjectePorres.ViewModels.CommandViewModel.Execute
  name: Execute
  nameWithType: CommandViewModel.Execute
  fullName: ProjectePorres.ViewModels.CommandViewModel.Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(System.Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    nameWithType: ICommand.Execute
    fullName: System.Windows.Input.ICommand.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    nameWithType: ICommand.Execute
    fullName: System.Windows.Input.ICommand.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
